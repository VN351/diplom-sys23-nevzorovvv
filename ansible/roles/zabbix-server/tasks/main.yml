- name: Ping server
  ansible.builtin.ping:

- name: Install packages
  become: true
  ansible.builtin.apt:
    state: present
    name:
      - tcsh
      - htop

- name: Create a directory
  ansible.builtin.file:
    path: /etc/zabbix-files
    state: directory
    mode: "0755"

- name: Download the zabbix files
  ansible.builtin.get_url:
    url: "https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb"
    dest: /etc/zabbix-files
  become: true

- name: Install the zabbix package
  ansible.builtin.apt:
    deb: /etc/zabbix-files/zabbix-release_6.4-1+ubuntu22.04_all.deb
  become: true

- name: Update apt packages
  ansible.builtin.apt:
    force_apt_get: true
    update_cache: yes
  become: true

- name: Install zabbix frontend, agent and server
  ansible.builtin.apt:
    pkg:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-nginx-conf
      - zabbix-sql-scripts
      - zabbix-agent

- name: Install Mysql
  ansible.builtin.apt:
    name:
      - mysql-server
      - python3-pip
      - libmysqlclient-dev
      - python3-dev
      - python3-mysqldb
    state: present

- name: Enable and reload mysql
  ansible.builtin.systemd:
    name: mysql
    enabled: true
    masked: no
    state: restarted

- name: Create mysql user zabbix and password
  community.mysql.mysql_user:
    name: zabbix
    password: "{{password_db}}"
    priv: "*.*:ALL,GRANT"
    state: present

- name: Create mysql database
  community.mysql.mysql_db:
    name: zabbix
    encoding: utf8mb4
    collation: utf8mb4_bin
    state: present

- name: Search for server.sql
  ansible.builtin.stat:
    path: /usr/share/zabbix-sql-scripts/mysql/server.sql
  register: result

- name: Extract .gz into /tmp
  ansible.builtin.shell:
    cmd: gunzip /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
  when: not result.stat.exists

- name: Import preset (will not be executed if server.sql existed before Extracting)
  community.mysql.mysql_db:
    name: zabbix
    state: import
    target: /usr/share/zabbix-sql-scripts/mysql/server.sql
  when: not result.stat.exists

- name: Set new database password for mysql database
  ansible.builtin.lineinfile:
    path: /etc/zabbix/zabbix_server.conf
    insertafter: "DBPassword="
    line: "DBPassword={{password_db}}"

- name: Ensure 'listen 8080;' is present in the 'server' block
  ansible.builtin.lineinfile:
    path: /etc/zabbix/nginx.conf
    regexp: "^\\s*listen\\s+8080;"
    insertafter: "^\\s*server\\s*{"
    line: "    listen 8080;"
    state: present

- name: Ensure 'server_name example.com;' is present in the 'server' block
  ansible.builtin.lineinfile:
    path: /etc/zabbix/nginx.conf
    regexp: "^\\s*server_name\\s+example\\.com;"
    insertafter: "^\\s*listen\\s+8080;"
    line: "    server_name example.com;"
    state: present

- name: Enable and restart zabbix and webserver
  ansible.builtin.systemd:
    name: zabbix-server
    enabled: true
    masked: no
    state: restarted

- name: Enable and restart zabbix agent
  ansible.builtin.systemd:
    name: zabbix-agent
    enabled: true
    masked: no
    state: restarted

- name: Enable and restart nginx
  ansible.builtin.systemd:
    name: nginx
    enabled: true
    masked: no
    state: restarted

- name: Enable and restart php
  ansible.builtin.systemd:
    name: php8.1-fpm
    enabled: true
    masked: no
    state: restarted
